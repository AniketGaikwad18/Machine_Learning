# -*- coding: utf-8 -*-
"""KNN imputation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b0qpEppNYfw0mj4UFGTWCXfrK-69BoTB
"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.impute import KNNImputer

df = pd.read_csv('train (2).csv',usecols=['Age','Pclass','Fare','Survived'])

X = df.drop('Survived',axis=1)
y = df['Survived']

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)

#knn = KNNImputer(n_neighbors=3, weights='uniform')
knn = KNNImputer(n_neighbors=3, weights='distance')
X_train_trf = knn.fit_transform(X_train)
X_test_trf = knn.transform(X_test)

import pandas as pd

X_train_trf = pd.DataFrame(X_train_trf, columns=[f"feature_{i}" for i in range(X_train_trf.shape[1])])

X_train_trf

lr = LogisticRegression()
lr.fit(X_train_trf,y_train)

y_pred = lr.predict(X_test_trf)
accuracy_score(y_test,y_pred)

