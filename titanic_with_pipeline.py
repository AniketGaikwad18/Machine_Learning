# -*- coding: utf-8 -*-
"""Titanic-with-pipeline.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13G_dxEUeHe4WAjwyWZHNdSq_nufqgReT
"""

import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import MinMaxScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline,make_pipeline
from sklearn.feature_selection import SelectKBest,chi2

df = pd.read_csv('Titanic-Dataset.csv')

df.drop(columns=['PassengerId','Name','Ticket','Cabin'],inplace=True)

df

X_train,X_test,y_train,y_test = train_test_split(df.drop(columns=['Survived']),
                                                   df['Survived'],
                                                   test_size=0.2,
                                                   random_state=42)

X_train.head()

#Imputation transformer
trf1 = ColumnTransformer([
    ('impute_age',SimpleImputer(),[2]),
    ('impute_embarked',SimpleImputer(strategy='most_frequent'),[6])
],remainder='passthrough')

#one hot encoding
trf2 = ColumnTransformer([
    ('ohe_sex_embarked',OneHotEncoder(sparse_output=False,handle_unknown='ignore'),[1,6])
],remainder='passthrough')

#scaling
trf3 = ColumnTransformer([
    ('scale',MinMaxScaler(),slice(0,10))
])

# #Feature Selection
trf4 = SelectKBest(score_func=chi2,k=8)

#train the model
trf5 = DecisionTreeClassifier()

"""#NOW CREATING THE PIPELINE

"""

pipe = Pipeline([
    ('trf1',trf1),
    ('trf2',trf2),
    ('trf3',trf3),
    ('trf4',trf4),
    ('trf5',trf5)
])

pipe.fit(X_train,y_train)

pipe.named_steps['trf1'].transformers_[0][1]

y_pred = pipe.predict(X_test)

y_pred

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

"""#CROSS VAIDATION using PIPELINE"""

from sklearn.model_selection import cross_val_score

cross_val_score(pipe,X_train,y_train,cv=5,scoring='accuracy').mean()

import pickle

pickle.dump(pipe,open('pipe.pkl','wb'))

