# -*- coding: utf-8 -*-
"""Handling_cate_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-gDuhMdXi5JqTP7MygN3tIn6nmfQVMZy
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('train.csv',usecols=['GarageQual','FireplaceQu','SalePrice'])

df.head()

df.isnull().mean()*100

df['GarageQual'].value_counts().sort_values(ascending=False).plot.bar()
plt.xlabel('GarageQual')
plt.ylabel('Number of Houses')

df['GarageQual'].mode()

fig = plt.figure()
ax = fig.add_subplot(111)

df[df['GarageQual']=='TA']['SalePrice'].plot(kind='kde',ax=ax)

df[df['GarageQual'].isnull()]['SalePrice'].plot(kind='kde',ax=ax,color='red')

lines, labels = ax.get_legend_handles_labels()
labels = ['Houses with TA','Houses eith NA']
ax.legend(lines,labels,loc='best')

plt.title('GarageQual')

temp = df[df['GarageQual'] =='TA']['SalePrice']

df['GarageQual'].fillna('TA',inplace=True)

df['GarageQual'].value_counts().plot(kind='bar')

fig = plt.figure()
ax = fig.add_subplot(111)

temp.plot(kind='kde',color='red',ax=ax)

df[df['GarageQual']=='TA']['SalePrice'].plot(kind='kde',ax=ax)

lines, labels = ax.get_legend_handles_labels()
labels = ['Original Variable','Inputed variable']
ax.legend(lines,labels,loc='best')

plt.title('GarageQual')

df['FireplaceQu'].value_counts().plot(kind='bar')

df['FireplaceQu'].mode()

fig = plt.figure()
ax = fig.add_subplot(111)

df[df['FireplaceQu']=='Gd']['SalePrice'].plot(kind='kde',ax=ax)

df[df['FireplaceQu'].isnull()]['SalePrice'].plot(kind='kde',ax=ax,color= 'red')

lines,labels = ax.get_legend_handles_labels()
labels = ['House with gd','House with NA']
ax.legend(lines,labels,loc='best')

plt.title('FireplaceQu')

temp = df[df['FireplaceQu']=='Gd']['SalePrice']

df['FireplaceQu'].fillna('Gd',inplace=True)

df['FireplaceQu'].value_counts().plot(kind='bar')

fig = plt.figure()
ax = fig.add_subplot(111)

temp.plot(kind='kde',ax=ax,color='red')
df[df['FireplaceQu']=='Gd']['SalePrice'].plot(kind='kde',ax=ax)

lines,labels = ax.get_legend_handles_labels()
labels = ['Original Label','Imputed variable']
ax.legend(lines,labels,loc='best')

plt.title('FireplaceQu')

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(df.drop(columns=['SalePrice']),df['SalePrice'],test_size=0.3,random_state=0)

from sklearn.impute import SimpleImputer

imputer = SimpleImputer(strategy='most_frequent')

X_train = imputer.fit_transform(X_train)
X_test = imputer.transform(X_train)

imputer.statistics_

